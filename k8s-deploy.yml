#
# Deployment Configuration
#
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: api-bi-prod
  labels:
    app: api-bi-prod
spec:
  serviceName: api-bi-prod
  selector:
    matchLabels:
      app: api-bi-prod
  #  replicas: 1
  #  updateStrategy:
  #    type: RollingUpdate
  template:
    metadata:
      labels:
        app: api-bi-prod
        version: 1.0.RELEASE
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port: "8080"
    spec:
      #      affinity:
      #        nodeAffinity:
      #          requiredDuringSchedulingIgnoredDuringExecution:
      #            nodeSelectorTerms:
      #              - matchExpressions:
      #                  - key: kubernetes.io/hostname
      #                    operator: In
      #                    values:
      #                      - k8sworker1
      #                      - k8sworker2
      terminationGracePeriodSeconds: 1800
      restartPolicy: Always
      imagePullSecrets:
        - name: secret-buildpacks
      containers:
        - name: api-bi-prod
          image: registry.parlacom.net:8081/leadingquest/leadingquest-musketeers:prod-v1.0
          imagePullPolicy: Always
          # The sleep execution in a preStop handler to avoid requests being routed to a pod that has already begun shutting down.
          lifecycle:
            preStop:
              exec:
                command: ["sh", "-c", "sleep 10"]
          volumeMounts:
            - name: api-bi-prod-storage
              mountPath: "/data"
          resources:
            requests:
              memory: "1000Mi"
              cpu: "0.5"
            limits:
              memory: "1000Mi"
              cpu: "2"
          ports:
            - containerPort: 8080
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: "prod"
            - name: SERVER_PORT
              value: "8080"
          livenessProbe:
            httpGet:
              port: 8080
              path: /actuator/health/liveness
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 15
          readinessProbe:
            httpGet:
              port: 8080
              path: /actuator/health/readiness
            initialDelaySeconds: 30
            periodSeconds: 15
            timeoutSeconds: 15
      securityContext:
        runAsUser: 1000
        runAsGroup: 3000
        fsGroup: 2000
      volumes:
        - name: api-bi-prod-storage
          persistentVolumeClaim:
            claimName: pvc-nfs-ms-claim

#  volumeClaimTemplates:
#    - metadata:
#        name: api-bi-prod-storage
#      spec:
#        accessModes: ["ReadWriteOnce"]
#        storageClassName: "longhorn"
#        resources:
#          requests:
#            storage: 1Gi
---

#
# Service Configuration
#
apiVersion: v1
kind: Service
metadata:
  name: api-bi-prod
  labels:
    app: api-bi-prod
spec:
  selector:
    app: api-bi-prod
  ports:
    - protocol: TCP
      name: http
      port: 8080
      targetPort: 8080

---

#
# Horizontal Pod Autoscaler
#
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-bi-prod
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: StatefulSet
    name: api-bi-prod
  minReplicas: 2
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 95
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 95

---

#
# Service Monitor
#
# https://github.com/prometheus-operator/prometheus-operator
# https://tanzu.vmware.com/developer/guides/spring/spring-prometheus/
# https://dimitr.im/collecting-application-metrics-with-istio
#
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: api-bi-prod-service-monitor
  labels:
    app: api-bi-prod
    release: prometheus
spec:
  selector:
    matchLabels:
      app: api-bi-prod
  endpoints:
    - port: http
      path: "/actuator/prometheus"

---

##
## Application PROD Secret
##
## kubectl apply -f k8s-secret.yml
## kubectl delete secret api-bi-prod
## kubectl edit secret api-bi-prod
## kubectl describe secret api-bi-prod
##
#apiVersion: v1
#kind: Secret
#metadata:
#  name: api-bi-prod
#  namespace: default
#stringData:
#  wavefront-api-token: 9b8d88f6-7ba5-4f1f-95b0-b920ff95c07e
#type: Opache
